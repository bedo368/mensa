{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/app/utils/dbconnect.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\n// Specify the MongoDB URI and include the database name\nconst MONGODB_URI = `mongodb+srv://user:JUeucc905NPw0B9b@cluster0.qjvmb.mongodb.net/`;\n\nif (!MONGODB_URI) {\n  throw new Error(\"يرجى إعداد متغير البيئة MONGODB_URI في ملف .env.local\");\n}\n\n// Create a cached connection object for Mongoose\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n  // If there is an existing connection, return it\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  // If there is no existing promise, create one\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false, // Disable buffering for faster connections\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  // Wait for the promise to resolve and cache the connection\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default dbConnect;\n"],"names":[],"mappings":";;;AAAA;;AAEA,wDAAwD;AACxD,MAAM,cAAc,CAAC,+DAA+D,CAAC;AAErF,uCAAkB;;AAElB;AAEA,iDAAiD;AACjD,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,gDAAgD;IAChD,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,8CAA8C;IAC9C,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,2DAA2D;IAC3D,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/app/models/studentanswer.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst StudentAnswerSchema = new mongoose.Schema(\n  {\n    testId: { type: mongoose.Schema.Types.ObjectId, required: true, ref: \"Test\" },\n    studentId: { type: mongoose.Schema.Types.ObjectId, required: true, ref: \"User\" }, // Assume you have a student system\n    answers: { type: Map, of: Number, required: true }, // Map question index to selected option\n    totalScore: { type: Number, default: 0 }, // Store the calculated score\n    isGraded: { type: Boolean, default: false }, // To mark if grading is done\n    submissionDate: { type: Date, default: Date.now },\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.models.StudentAnswer ||\n  mongoose.model(\"StudentAnswer\", StudentAnswerSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,sBAAsB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAC7C;IACE,QAAQ;QAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,UAAU;QAAM,KAAK;IAAO;IAC5E,WAAW;QAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,UAAU;QAAM,KAAK;IAAO;IAC/E,SAAS;QAAE,MAAM;QAAK,IAAI;QAAQ,UAAU;IAAK;IACjD,YAAY;QAAE,MAAM;QAAQ,SAAS;IAAE;IACvC,UAAU;QAAE,MAAM;QAAS,SAAS;IAAM;IAC1C,gBAAgB;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAClD,GACA;IAAE,YAAY;AAAK;uCAGN,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,aAAa,IAC1C,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,iBAAiB"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/app/models/test.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst QuestionSchema = new mongoose.Schema({\n  question: String,\n  options: [String],\n  correctAnswer: Number,\n  image: String, // URL for uploaded image\n});\n\nconst TestSchema = new mongoose.Schema({\n  title: { type: String, required: true },\n  description: { type: String, required: true },\n  questions: [QuestionSchema],\n  questionCount: { type: Number, required: true },\n  difficulty: { type: String, enum: [\"easy\", \"medium\", \"hard\"], required: true },\n  totalMarks: { type: Number, required: true  },\n  timeLimit: { type: Number, required: true  ,default: 60}, \n  createdAt: { type: Date, default: Date.now },\n});\n\nexport default mongoose.models.Test || mongoose.model(\"Test\", TestSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,iBAAiB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACzC,UAAU;IACV,SAAS;QAAC;KAAO;IACjB,eAAe;IACf,OAAO;AACT;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,WAAW;QAAC;KAAe;IAC3B,eAAe;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC9C,YAAY;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAQ;YAAU;SAAO;QAAE,UAAU;IAAK;IAC7E,YAAY;QAAE,MAAM;QAAQ,UAAU;IAAM;IAC5C,WAAW;QAAE,MAAM;QAAQ,UAAU;QAAO,SAAS;IAAE;IACvD,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC7C;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/pages/api/submit-test.js"],"sourcesContent":["import dbConnect from \"../../app/utils/dbconnect\";\nimport StudentAnswer from \"../../app/models/studentanswer\";\nimport Test from \"../../app/models/test\"; // Assuming you already have a Test model\n\nexport default async function handler(req, res) {\n  await dbConnect(); // Ensure database connection\n\n  if (req.method === \"POST\") {\n    const { testId, studentId, answers } = req.body;\n\n    if (!testId || !studentId || !answers) {\n      return res.status(400).json({ error: \"Missing required fields.\" });\n    }\n\n    try {\n      // Fetch the test to calculate the score\n      const test = await Test.findById(testId);\n      if (!test) {\n        return res.status(404).json({ error: \"Test not found.\" });\n      }\n\n      // Calculate the score\n      let totalScore = 0;\n      test.questions.forEach((question, index) => {\n        if (answers[index] === question.correctAnswer) {\n          totalScore++;\n        }\n      });\n\n      // Check if the student has already taken the test\n      const existingSubmission = await StudentAnswer.findOne({ testId, studentId });\n\n      if (existingSubmission) {\n        // Remove the previous submission\n        await StudentAnswer.deleteOne({ _id: existingSubmission._id });\n      }\n\n      // Save the new answers to the database\n      const studentAnswer = new StudentAnswer({\n        testId,\n        studentId,\n        answers,\n        totalScore,\n        isGraded: true, // Set to true as we calculate the score immediately\n      });\n\n      await studentAnswer.save();\n\n      return res.status(201).json({\n        message: \"Test submitted successfully!\",\n        totalScore,\n        maxScore: test.questions.length,\n      });\n    } catch (error) {\n      console.error(\"Error submitting test:\", error);\n      return res.status(500).json({ error: \"Error saving test submission.\" });\n    }\n  } else {\n    res.setHeader(\"Allow\", [\"POST\"]);\n    res.status(405).json({ error: `Method ${req.method} not allowed` });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA,8LAA0C,yCAAyC;;;;AAEpE,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD,KAAK,6BAA6B;IAEhD,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAI,IAAI;QAE/C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS;YACrC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA2B;QAClE;QAEA,IAAI;YACF,wCAAwC;YACxC,MAAM,OAAO,MAAM,8GAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,MAAM;gBACT,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAAkB;YACzD;YAEA,sBAAsB;YACtB,IAAI,aAAa;YACjB,KAAK,SAAS,CAAC,OAAO,CAAC,CAAC,UAAU;gBAChC,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,aAAa,EAAE;oBAC7C;gBACF;YACF;YAEA,kDAAkD;YAClD,MAAM,qBAAqB,MAAM,uHAAA,CAAA,UAAa,CAAC,OAAO,CAAC;gBAAE;gBAAQ;YAAU;YAE3E,IAAI,oBAAoB;gBACtB,iCAAiC;gBACjC,MAAM,uHAAA,CAAA,UAAa,CAAC,SAAS,CAAC;oBAAE,KAAK,mBAAmB,GAAG;gBAAC;YAC9D;YAEA,uCAAuC;YACvC,MAAM,gBAAgB,IAAI,uHAAA,CAAA,UAAa,CAAC;gBACtC;gBACA;gBACA;gBACA;gBACA,UAAU;YACZ;YAEA,MAAM,cAAc,IAAI;YAExB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAC1B,SAAS;gBACT;gBACA,UAAU,KAAK,SAAS,CAAC,MAAM;YACjC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAgC;QACvE;IACF,OAAO;QACL,IAAI,SAAS,CAAC,SAAS;YAAC;SAAO;QAC/B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,CAAC,OAAO,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC;QAAC;IACnE;AACF"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullah/courses1/my_apps/web/f/mensa/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,yHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,yHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}